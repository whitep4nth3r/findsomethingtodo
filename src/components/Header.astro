---
const { currentPath } = Astro.props;
---

<script>
  import { initClerk, getSession } from "../utils/session.js"
  
  const userButtonEl = document.getElementById('user-button');
  const clerk = initClerk();
  await clerk.load({});
  const session = await getSession();

  const data = document.getElementById("data");
  const path = data.getAttribute("data-current-path");
  const returnPath = path === "/" ? "" : path;

  if (session === null) {
    const href = document.createElement("a");
    href.setAttribute("href", `/sign-in?return=${returnPath}`);
    href.setAttribute
    href.textContent = "Sign in";
    href.setAttribute("class", path === "/sign-in" ? "active" : "");
    userButtonEl.appendChild(href);
  } else {
    clerk.mountUserButton(userButtonEl as HTMLDivElement, {
      signInUrl: `${window.location.origin}`,
      afterSignOutUrl: `${window.location.origin}`}
    );
  }
  

</script>

<header>
  <span id="data" data-current-path={currentPath}></span>
  <span class="logo" role="presentation" title="Plant in pot emoji">ðŸª´</span>
  <nav>
    <a href="/" class:list={[ { active: currentPath === "/" } ]}>Home</a>
    <a href="/browse" class:list={[ { active: currentPath === "/browse" } ]}>Browse</a>
    <a href="/add" class:list={[ { active: currentPath === "/add" } ]}>Add</a>
    <div class="header__userButton" id="user-button"></div>
  </nav>
</header>

<style is:global>
  .cl-userButtonPopoverCard {
    background-color: var(--stone);
    color: var(--green-dark);
  }

  .cl-userPreviewMainIdentifier {
    font-family: var(--font-heading);
  }
  
  .cl-userButtonPopoverActionButton span, 
  .cl-userPreviewSecondaryIdentifier, 
  .cl-userButtonPopoverActionButtonIconBox svg, 
  .cl-userButtonPopoverFooter p,
  .cl-userButtonPopoverFooter a {
    color: var(--green-dark);
  }


  nav a {
    color: var(--stone);
    text-decoration: none;
    font-size: clamp(1rem, 1.2vw, 1.2rem);
    border-radius: 0.5rem;
  }

  nav a.active {
    text-decoration: underline;
    text-decoration-style: wavy;
    text-decoration-color: var(--yellow);
    text-decoration-thickness: 0.2rem;
    text-underline-offset: 0.4rem;
  }

  nav a:focus, 
  nav a:focus-visible, 
  .cl-userButtonTrigger:focus-visible, 
  .cl-userButtonTrigger:focus {
    outline: transparent;
    outline-style: solid;
    box-shadow: var(--green-dark) 0 0 0 0.08rem, var(--green-light) 0 0 0 0.32rem;
    transition: box-shadow 0.2s ease-in-out;
  }
</style>

<style>
  #user-button {
    display: block;
    margin: auto;
  }

  .logo {
    font-size: 6rem;
    display: block;
    text-align: center;
  }

  nav {
		display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
		gap: 1rem;
		justify-content: space-between;
    align-items: center;
    height: 4rem;
    margin: auto auto 4rem auto;
    text-align: center;
	}
</style>